#!/bin/bash
CYAN='\033[0;36m'
LIGHT_CYAN='\033[1;36m'
WHITE='\033[1;37m'
RED='\033[1;31m'
NC='\033[0m'
if [ -z "$1" ] ; then
    echo -e "${RED}No app name was given. Halting"
    exit 1
fi
echo -e "${RED} _                               _ "
echo -e "${RED}| |                             | |"
echo -e "${RED}| |     __ _ _ __ __ ___   _____| |"
echo -e "${RED}| |    / _\` | '__/ _\` \ \ / / _ \ |"
echo -e "${RED}| |___| (_| | | | (_| |\ V /  __/ |"
echo -e "${RED}|______\__,_|_|  \__,_| \_/ \___|_|"
echo ""
set -- ${1// /_} # replace spaces in first argument
# EDITED LARAVEL BUILD SCRIPT FROM https://laravel.build/example-app
docker info > /dev/null 2>&1
# Ensure that Docker is running...
if [ $? -ne 0 ]; then
    echo -e "${RED}Docker is not running."
    exit 1
fi
echo -e "${WHITE}Creating project, please wait..."
# USING PHP 7.4. Switch to 8.0: laravelsail/php80-composer:latest
docker run --rm \
    -v $(pwd):/opt \
    -w /opt \
    laravelsail/php74-composer:latest \
    bash -c "laravel new ${1} && cd ${1} && php ./artisan sail:install --with=mysql,redis,meilisearch,mailhog,selenium" > /dev/null 2>&1
cd ${1}
echo "Project created!"
if sudo -n true 2>/dev/null; then
    sudo chown -R $USER: .
else
    echo -e "${WHITE}Please provide your password so we can make some final adjustments to your application's permissions.${NC}"
    sudo chown -R $USER: .
fi
# sed -i "s/\(ENV_KEY *= *\).*/\1ENV_VALUE/" ./.env # replace ENV_KEY value to ENV_VALUE in .env file
echo -e "${WHITE}Recreating docker-compose.yml..."
# REWRITING docker-compose.yml
cat << EOF > docker-compose.yml
# For more information: https://laravel.com/docs/sail
version: '3'
services:
    laravel.test:
        build:
            context: ./vendor/laravel/sail/runtimes/7.4
            dockerfile: Dockerfile
            args:
                WWWGROUP: '\${WWWGROUP}'
        image: sail-7.4/app
        ports:
            - '\${APP_PORT:-80}:80'
        environment:
            WWWUSER: '\${WWWUSER}'
            LARAVEL_SAIL: 1
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - mysql
            - redis
            - meilisearch
            - selenium
    mysql:
        image: 'mysql:8.0'
        ports:
            - '\${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '\${DB_PASSWORD}'
            MYSQL_DATABASE: '\${DB_DATABASE}'
            MYSQL_USER: '\${DB_USERNAME}'
            MYSQL_PASSWORD: '\${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        volumes:
            - 'sailmysql:/var/lib/mysql'
        networks:
            - sail
        healthcheck:
          test: ["CMD", "mysqladmin", "ping", "-p\${DB_PASSWORD}"]
          retries: 3
          timeout: 5s
    redis:
        image: 'redis:alpine'
        ports:
            - '\${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sailredis:/data'
        networks:
            - sail
        healthcheck:
          test: ["CMD", "redis-cli", "ping"]
          retries: 3
          timeout: 5s
    meilisearch:
        image: 'getmeili/meilisearch:latest'
        ports:
            - '\${FORWARD_MEILISEARCH_PORT:-7700}:7700'
        volumes:
            - 'sailmeilisearch:/data.ms'
        networks:
            - sail
        healthcheck:
          test: ["CMD", "wget", "--no-verbose", "--spider", "http://localhost:7700/health"]
          retries: 3
          timeout: 5s
    mailhog:
        image: 'mailhog/mailhog:latest'
        ports:
            - '\${FORWARD_MAILHOG_PORT:-1025}:1025'
            - '\${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
        networks:
            - sail
    selenium:
       image: 'selenium/standalone-chrome'
       volumes:
            - '/dev/shm:/dev/shm'
       networks:
           - sail
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        links:
            - mysql:mysql
        ports:
            - 8080:80
        environment:
            MYSQL_USERNAME: "\${DB_USERNAME}"
            MYSQL_ROOT_PASSWORD: "\${DB_PASSWORD}"
            PMA_HOST: mysql
        networks:
            - sail
networks:
    sail:
        driver: bridge
volumes:
    sailmysql:
        driver: local
    sailredis:
        driver: local
    sailmeilisearch:
        driver: local
EOF
# END REWRITING
echo -e "${WHITE}Building sail..."
./vendor/bin/sail build > /dev/null 2>&1
echo -e "${LIGHT_CYAN}Thank you! We hope you build something incredible."
echo -e "${LIGHT_CYAN}Dive in with:${NC} cd ${1} && ./vendor/bin/sail up -d"
# END SCRIPT
